name: Release

on:
  release:
    types: [published]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false

      matrix:
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Set CIBW_PLATFORM environment variable
        run: |
          if ${{ startsWith(matrix.os, 'ubuntu') }}; then
            export CIBW_PLATFORM=linux
          elif ${{ startsWith(matrix.os, 'windows') }}; then
            export CIBW_PLATFORM=windows
          else
            export CIBW_PLATFORM=mac
          fi

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse-${{ matrix.os }}
        with:
          name: ${{ matrix.os }}-wheels
          path: ./wheelhouse-${{ matrix.os }}/*.whl

      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse-${{ matrix.os }}
          path: ./wheelhouse-${{ matrix.os }}/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: wheelhouse-${{ matrix.os }}
          path: ./dist/

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TEST_DEPLOY_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Upload Python packages for release notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
