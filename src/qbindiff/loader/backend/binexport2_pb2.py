# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: binexport2.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x10\x62inexport2.proto"\xa5\x17\n\nBinExport2\x12*\n\x10meta_information\x18\x01 \x01(\x0b\x32\x10.BinExport2.Meta\x12*\n\nexpression\x18\x02 \x03(\x0b\x32\x16.BinExport2.Expression\x12$\n\x07operand\x18\x03 \x03(\x0b\x32\x13.BinExport2.Operand\x12&\n\x08mnemonic\x18\x04 \x03(\x0b\x32\x14.BinExport2.Mnemonic\x12,\n\x0binstruction\x18\x05 \x03(\x0b\x32\x17.BinExport2.Instruction\x12+\n\x0b\x62\x61sic_block\x18\x06 \x03(\x0b\x32\x16.BinExport2.BasicBlock\x12)\n\nflow_graph\x18\x07 \x03(\x0b\x32\x15.BinExport2.FlowGraph\x12)\n\ncall_graph\x18\x08 \x01(\x0b\x32\x15.BinExport2.CallGraph\x12\x14\n\x0cstring_table\x18\t \x03(\t\x12\x32\n\x0f\x61\x64\x64ress_comment\x18\n \x03(\x0b\x32\x15.BinExport2.ReferenceB\x02\x18\x01\x12$\n\x07\x63omment\x18\x11 \x03(\x0b\x32\x13.BinExport2.Comment\x12/\n\x10string_reference\x18\x0b \x03(\x0b\x32\x15.BinExport2.Reference\x12\x36\n\x17\x65xpression_substitution\x18\x0c \x03(\x0b\x32\x15.BinExport2.Reference\x12$\n\x07section\x18\r \x03(\x0b\x32\x13.BinExport2.Section\x12$\n\x07library\x18\x0e \x03(\x0b\x32\x13.BinExport2.Library\x12\x31\n\x0e\x64\x61ta_reference\x18\x0f \x03(\x0b\x32\x19.BinExport2.DataReference\x12"\n\x06module\x18\x10 \x03(\x0b\x32\x12.BinExport2.Module\x1aj\n\x04Meta\x12\x17\n\x0f\x65xecutable_name\x18\x01 \x01(\t\x12\x15\n\rexecutable_id\x18\x02 \x01(\t\x12\x19\n\x11\x61rchitecture_name\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\x03J\x04\x08\x05\x10\x06\x1a\x9c\x03\n\tCallGraph\x12,\n\x06vertex\x18\x01 \x03(\x0b\x32\x1c.BinExport2.CallGraph.Vertex\x12(\n\x04\x65\x64ge\x18\x02 \x03(\x0b\x32\x1a.BinExport2.CallGraph.Edge\x1a\xf4\x01\n\x06Vertex\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x04\x12\x37\n\x04type\x18\x02 \x01(\x0e\x32!.BinExport2.CallGraph.Vertex.Type:\x06NORMAL\x12\x14\n\x0cmangled_name\x18\x03 \x01(\t\x12\x16\n\x0e\x64\x65mangled_name\x18\x04 \x01(\t\x12\x15\n\rlibrary_index\x18\x05 \x01(\x05\x12\x14\n\x0cmodule_index\x18\x06 \x01(\x05"E\n\x04Type\x12\n\n\x06NORMAL\x10\x00\x12\x0b\n\x07LIBRARY\x10\x01\x12\x0c\n\x08IMPORTED\x10\x02\x12\t\n\x05THUNK\x10\x03\x12\x0b\n\x07INVALID\x10\x04\x1a@\n\x04\x45\x64ge\x12\x1b\n\x13source_vertex_index\x18\x01 \x01(\x05\x12\x1b\n\x13target_vertex_index\x18\x02 \x01(\x05\x1a\x90\x02\n\nExpression\x12\x38\n\x04type\x18\x01 \x01(\x0e\x32\x1b.BinExport2.Expression.Type:\rIMMEDIATE_INT\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x11\n\timmediate\x18\x03 \x01(\x04\x12\x14\n\x0cparent_index\x18\x04 \x01(\x05\x12\x15\n\ris_relocation\x18\x05 \x01(\x08"x\n\x04Type\x12\n\n\x06SYMBOL\x10\x01\x12\x11\n\rIMMEDIATE_INT\x10\x02\x12\x13\n\x0fIMMEDIATE_FLOAT\x10\x03\x12\x0c\n\x08OPERATOR\x10\x04\x12\x0c\n\x08REGISTER\x10\x05\x12\x0f\n\x0bSIZE_PREFIX\x10\x06\x12\x0f\n\x0b\x44\x45REFERENCE\x10\x07\x1a#\n\x07Operand\x12\x18\n\x10\x65xpression_index\x18\x01 \x03(\x05\x1a\x18\n\x08Mnemonic\x12\x0c\n\x04name\x18\x01 \x01(\t\x1a\x8f\x01\n\x0bInstruction\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x04\x12\x13\n\x0b\x63\x61ll_target\x18\x02 \x03(\x04\x12\x19\n\x0emnemonic_index\x18\x03 \x01(\x05:\x01\x30\x12\x15\n\roperand_index\x18\x04 \x03(\x05\x12\x11\n\traw_bytes\x18\x05 \x01(\x0c\x12\x15\n\rcomment_index\x18\x06 \x03(\x05\x1a\x80\x01\n\nBasicBlock\x12<\n\x11instruction_index\x18\x01 \x03(\x0b\x32!.BinExport2.BasicBlock.IndexRange\x1a\x34\n\nIndexRange\x12\x13\n\x0b\x62\x65gin_index\x18\x01 \x01(\x05\x12\x11\n\tend_index\x18\x02 \x01(\x05\x1a\xe9\x02\n\tFlowGraph\x12\x19\n\x11\x62\x61sic_block_index\x18\x01 \x03(\x05\x12\x1f\n\x17\x65ntry_basic_block_index\x18\x03 \x01(\x05\x12(\n\x04\x65\x64ge\x18\x02 \x03(\x0b\x32\x1a.BinExport2.FlowGraph.Edge\x1a\xf5\x01\n\x04\x45\x64ge\x12 \n\x18source_basic_block_index\x18\x01 \x01(\x05\x12 \n\x18target_basic_block_index\x18\x02 \x01(\x05\x12<\n\x04type\x18\x03 \x01(\x0e\x32\x1f.BinExport2.FlowGraph.Edge.Type:\rUNCONDITIONAL\x12\x1b\n\x0cis_back_edge\x18\x04 \x01(\x08:\x05\x66\x61lse"N\n\x04Type\x12\x12\n\x0e\x43ONDITION_TRUE\x10\x01\x12\x13\n\x0f\x43ONDITION_FALSE\x10\x02\x12\x11\n\rUNCONDITIONAL\x10\x03\x12\n\n\x06SWITCH\x10\x04\x1a\x8d\x01\n\tReference\x12\x19\n\x11instruction_index\x18\x01 \x01(\x05\x12$\n\x19instruction_operand_index\x18\x02 \x01(\x05:\x01\x30\x12#\n\x18operand_expression_index\x18\x03 \x01(\x05:\x01\x30\x12\x1a\n\x12string_table_index\x18\x04 \x01(\x05\x1a;\n\rDataReference\x12\x19\n\x11instruction_index\x18\x01 \x01(\x05\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\x04\x1a\xd4\x02\n\x07\x43omment\x12\x19\n\x11instruction_index\x18\x01 \x01(\x05\x12$\n\x19instruction_operand_index\x18\x02 \x01(\x05:\x01\x30\x12#\n\x18operand_expression_index\x18\x03 \x01(\x05:\x01\x30\x12\x1a\n\x12string_table_index\x18\x04 \x01(\x05\x12\x12\n\nrepeatable\x18\x05 \x01(\x08\x12/\n\x04type\x18\x06 \x01(\x0e\x32\x18.BinExport2.Comment.Type:\x07\x44\x45\x46\x41ULT"\x81\x01\n\x04Type\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0c\n\x08\x41NTERIOR\x10\x01\x12\r\n\tPOSTERIOR\x10\x02\x12\x0c\n\x08\x46UNCTION\x10\x03\x12\x08\n\x04\x45NUM\x10\x04\x12\x0c\n\x08LOCATION\x10\x05\x12\x14\n\x10GLOBAL_REFERENCE\x10\x06\x12\x13\n\x0fLOCAL_REFERENCE\x10\x07\x1aX\n\x07Section\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x04\x12\x0c\n\x04size\x18\x02 \x01(\x04\x12\x0e\n\x06\x66lag_r\x18\x03 \x01(\x08\x12\x0e\n\x06\x66lag_w\x18\x04 \x01(\x08\x12\x0e\n\x06\x66lag_x\x18\x05 \x01(\x08\x1a\x43\n\x07Library\x12\x11\n\tis_static\x18\x01 \x01(\x08\x12\x17\n\x0cload_address\x18\x02 \x01(\x04:\x01\x30\x12\x0c\n\x04name\x18\x03 \x01(\t\x1a\x16\n\x06Module\x12\x0c\n\x04name\x18\x01 \x01(\t*\x0b\x08\x80\xc2\xd7/\x10\x80\x80\x80\x80\x02\x42)\n\x1c\x63om.google.security.zynamicsB\tBinExport'
)


_BINEXPORT2 = DESCRIPTOR.message_types_by_name["BinExport2"]
_BINEXPORT2_META = _BINEXPORT2.nested_types_by_name["Meta"]
_BINEXPORT2_CALLGRAPH = _BINEXPORT2.nested_types_by_name["CallGraph"]
_BINEXPORT2_CALLGRAPH_VERTEX = _BINEXPORT2_CALLGRAPH.nested_types_by_name["Vertex"]
_BINEXPORT2_CALLGRAPH_EDGE = _BINEXPORT2_CALLGRAPH.nested_types_by_name["Edge"]
_BINEXPORT2_EXPRESSION = _BINEXPORT2.nested_types_by_name["Expression"]
_BINEXPORT2_OPERAND = _BINEXPORT2.nested_types_by_name["Operand"]
_BINEXPORT2_MNEMONIC = _BINEXPORT2.nested_types_by_name["Mnemonic"]
_BINEXPORT2_INSTRUCTION = _BINEXPORT2.nested_types_by_name["Instruction"]
_BINEXPORT2_BASICBLOCK = _BINEXPORT2.nested_types_by_name["BasicBlock"]
_BINEXPORT2_BASICBLOCK_INDEXRANGE = _BINEXPORT2_BASICBLOCK.nested_types_by_name[
    "IndexRange"
]
_BINEXPORT2_FLOWGRAPH = _BINEXPORT2.nested_types_by_name["FlowGraph"]
_BINEXPORT2_FLOWGRAPH_EDGE = _BINEXPORT2_FLOWGRAPH.nested_types_by_name["Edge"]
_BINEXPORT2_REFERENCE = _BINEXPORT2.nested_types_by_name["Reference"]
_BINEXPORT2_DATAREFERENCE = _BINEXPORT2.nested_types_by_name["DataReference"]
_BINEXPORT2_COMMENT = _BINEXPORT2.nested_types_by_name["Comment"]
_BINEXPORT2_SECTION = _BINEXPORT2.nested_types_by_name["Section"]
_BINEXPORT2_LIBRARY = _BINEXPORT2.nested_types_by_name["Library"]
_BINEXPORT2_MODULE = _BINEXPORT2.nested_types_by_name["Module"]
_BINEXPORT2_CALLGRAPH_VERTEX_TYPE = _BINEXPORT2_CALLGRAPH_VERTEX.enum_types_by_name[
    "Type"
]
_BINEXPORT2_EXPRESSION_TYPE = _BINEXPORT2_EXPRESSION.enum_types_by_name["Type"]
_BINEXPORT2_FLOWGRAPH_EDGE_TYPE = _BINEXPORT2_FLOWGRAPH_EDGE.enum_types_by_name["Type"]
_BINEXPORT2_COMMENT_TYPE = _BINEXPORT2_COMMENT.enum_types_by_name["Type"]
BinExport2 = _reflection.GeneratedProtocolMessageType(
    "BinExport2",
    (_message.Message,),
    {
        "Meta": _reflection.GeneratedProtocolMessageType(
            "Meta",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_META,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Meta)
            },
        ),
        "CallGraph": _reflection.GeneratedProtocolMessageType(
            "CallGraph",
            (_message.Message,),
            {
                "Vertex": _reflection.GeneratedProtocolMessageType(
                    "Vertex",
                    (_message.Message,),
                    {
                        "DESCRIPTOR": _BINEXPORT2_CALLGRAPH_VERTEX,
                        "__module__": "binexport2_pb2"
                        # @@protoc_insertion_point(class_scope:BinExport2.CallGraph.Vertex)
                    },
                ),
                "Edge": _reflection.GeneratedProtocolMessageType(
                    "Edge",
                    (_message.Message,),
                    {
                        "DESCRIPTOR": _BINEXPORT2_CALLGRAPH_EDGE,
                        "__module__": "binexport2_pb2"
                        # @@protoc_insertion_point(class_scope:BinExport2.CallGraph.Edge)
                    },
                ),
                "DESCRIPTOR": _BINEXPORT2_CALLGRAPH,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.CallGraph)
            },
        ),
        "Expression": _reflection.GeneratedProtocolMessageType(
            "Expression",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_EXPRESSION,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Expression)
            },
        ),
        "Operand": _reflection.GeneratedProtocolMessageType(
            "Operand",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_OPERAND,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Operand)
            },
        ),
        "Mnemonic": _reflection.GeneratedProtocolMessageType(
            "Mnemonic",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_MNEMONIC,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Mnemonic)
            },
        ),
        "Instruction": _reflection.GeneratedProtocolMessageType(
            "Instruction",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_INSTRUCTION,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Instruction)
            },
        ),
        "BasicBlock": _reflection.GeneratedProtocolMessageType(
            "BasicBlock",
            (_message.Message,),
            {
                "IndexRange": _reflection.GeneratedProtocolMessageType(
                    "IndexRange",
                    (_message.Message,),
                    {
                        "DESCRIPTOR": _BINEXPORT2_BASICBLOCK_INDEXRANGE,
                        "__module__": "binexport2_pb2"
                        # @@protoc_insertion_point(class_scope:BinExport2.BasicBlock.IndexRange)
                    },
                ),
                "DESCRIPTOR": _BINEXPORT2_BASICBLOCK,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.BasicBlock)
            },
        ),
        "FlowGraph": _reflection.GeneratedProtocolMessageType(
            "FlowGraph",
            (_message.Message,),
            {
                "Edge": _reflection.GeneratedProtocolMessageType(
                    "Edge",
                    (_message.Message,),
                    {
                        "DESCRIPTOR": _BINEXPORT2_FLOWGRAPH_EDGE,
                        "__module__": "binexport2_pb2"
                        # @@protoc_insertion_point(class_scope:BinExport2.FlowGraph.Edge)
                    },
                ),
                "DESCRIPTOR": _BINEXPORT2_FLOWGRAPH,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.FlowGraph)
            },
        ),
        "Reference": _reflection.GeneratedProtocolMessageType(
            "Reference",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_REFERENCE,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Reference)
            },
        ),
        "DataReference": _reflection.GeneratedProtocolMessageType(
            "DataReference",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_DATAREFERENCE,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.DataReference)
            },
        ),
        "Comment": _reflection.GeneratedProtocolMessageType(
            "Comment",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_COMMENT,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Comment)
            },
        ),
        "Section": _reflection.GeneratedProtocolMessageType(
            "Section",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_SECTION,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Section)
            },
        ),
        "Library": _reflection.GeneratedProtocolMessageType(
            "Library",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_LIBRARY,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Library)
            },
        ),
        "Module": _reflection.GeneratedProtocolMessageType(
            "Module",
            (_message.Message,),
            {
                "DESCRIPTOR": _BINEXPORT2_MODULE,
                "__module__": "binexport2_pb2"
                # @@protoc_insertion_point(class_scope:BinExport2.Module)
            },
        ),
        "DESCRIPTOR": _BINEXPORT2,
        "__module__": "binexport2_pb2"
        # @@protoc_insertion_point(class_scope:BinExport2)
    },
)
_sym_db.RegisterMessage(BinExport2)
_sym_db.RegisterMessage(BinExport2.Meta)
_sym_db.RegisterMessage(BinExport2.CallGraph)
_sym_db.RegisterMessage(BinExport2.CallGraph.Vertex)
_sym_db.RegisterMessage(BinExport2.CallGraph.Edge)
_sym_db.RegisterMessage(BinExport2.Expression)
_sym_db.RegisterMessage(BinExport2.Operand)
_sym_db.RegisterMessage(BinExport2.Mnemonic)
_sym_db.RegisterMessage(BinExport2.Instruction)
_sym_db.RegisterMessage(BinExport2.BasicBlock)
_sym_db.RegisterMessage(BinExport2.BasicBlock.IndexRange)
_sym_db.RegisterMessage(BinExport2.FlowGraph)
_sym_db.RegisterMessage(BinExport2.FlowGraph.Edge)
_sym_db.RegisterMessage(BinExport2.Reference)
_sym_db.RegisterMessage(BinExport2.DataReference)
_sym_db.RegisterMessage(BinExport2.Comment)
_sym_db.RegisterMessage(BinExport2.Section)
_sym_db.RegisterMessage(BinExport2.Library)
_sym_db.RegisterMessage(BinExport2.Module)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n\034com.google.security.zynamicsB\tBinExport"
    _BINEXPORT2.fields_by_name["address_comment"]._options = None
    _BINEXPORT2.fields_by_name["address_comment"]._serialized_options = b"\030\001"
    _BINEXPORT2._serialized_start = 21
    _BINEXPORT2._serialized_end = 3002
    _BINEXPORT2_META._serialized_start = 758
    _BINEXPORT2_META._serialized_end = 864
    _BINEXPORT2_CALLGRAPH._serialized_start = 867
    _BINEXPORT2_CALLGRAPH._serialized_end = 1279
    _BINEXPORT2_CALLGRAPH_VERTEX._serialized_start = 969
    _BINEXPORT2_CALLGRAPH_VERTEX._serialized_end = 1213
    _BINEXPORT2_CALLGRAPH_VERTEX_TYPE._serialized_start = 1144
    _BINEXPORT2_CALLGRAPH_VERTEX_TYPE._serialized_end = 1213
    _BINEXPORT2_CALLGRAPH_EDGE._serialized_start = 1215
    _BINEXPORT2_CALLGRAPH_EDGE._serialized_end = 1279
    _BINEXPORT2_EXPRESSION._serialized_start = 1282
    _BINEXPORT2_EXPRESSION._serialized_end = 1554
    _BINEXPORT2_EXPRESSION_TYPE._serialized_start = 1434
    _BINEXPORT2_EXPRESSION_TYPE._serialized_end = 1554
    _BINEXPORT2_OPERAND._serialized_start = 1556
    _BINEXPORT2_OPERAND._serialized_end = 1591
    _BINEXPORT2_MNEMONIC._serialized_start = 1593
    _BINEXPORT2_MNEMONIC._serialized_end = 1617
    _BINEXPORT2_INSTRUCTION._serialized_start = 1620
    _BINEXPORT2_INSTRUCTION._serialized_end = 1763
    _BINEXPORT2_BASICBLOCK._serialized_start = 1766
    _BINEXPORT2_BASICBLOCK._serialized_end = 1894
    _BINEXPORT2_BASICBLOCK_INDEXRANGE._serialized_start = 1842
    _BINEXPORT2_BASICBLOCK_INDEXRANGE._serialized_end = 1894
    _BINEXPORT2_FLOWGRAPH._serialized_start = 1897
    _BINEXPORT2_FLOWGRAPH._serialized_end = 2258
    _BINEXPORT2_FLOWGRAPH_EDGE._serialized_start = 2013
    _BINEXPORT2_FLOWGRAPH_EDGE._serialized_end = 2258
    _BINEXPORT2_FLOWGRAPH_EDGE_TYPE._serialized_start = 2180
    _BINEXPORT2_FLOWGRAPH_EDGE_TYPE._serialized_end = 2258
    _BINEXPORT2_REFERENCE._serialized_start = 2261
    _BINEXPORT2_REFERENCE._serialized_end = 2402
    _BINEXPORT2_DATAREFERENCE._serialized_start = 2404
    _BINEXPORT2_DATAREFERENCE._serialized_end = 2463
    _BINEXPORT2_COMMENT._serialized_start = 2466
    _BINEXPORT2_COMMENT._serialized_end = 2806
    _BINEXPORT2_COMMENT_TYPE._serialized_start = 2677
    _BINEXPORT2_COMMENT_TYPE._serialized_end = 2806
    _BINEXPORT2_SECTION._serialized_start = 2808
    _BINEXPORT2_SECTION._serialized_end = 2896
    _BINEXPORT2_LIBRARY._serialized_start = 2898
    _BINEXPORT2_LIBRARY._serialized_end = 2965
    _BINEXPORT2_MODULE._serialized_start = 2967
    _BINEXPORT2_MODULE._serialized_end = 2989
# @@protoc_insertion_point(module_scope)
